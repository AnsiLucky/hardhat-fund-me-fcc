{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "s_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe_NotEnoghETH",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0xb4353810561d452d1f76e3f4188c618070965def17bc37fef387144596228289",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1009117",
        "logsBloom": "0x
        "blockHash": "0xd907ee49575c7a5efb1cba9163e4842349079a1fe669da14393aaf5b25cf30ab",
        "transactionHash": "0xb4353810561d452d1f76e3f4188c618070965def17bc37fef387144596228289",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1009117",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "7bc2661354a3dfcc293ceddadca5f94d",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotEnoghETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Ansi Nitro\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd fundings\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is demo version of funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Pragma\\npragma solidity ^0.8.8;\\n\\n// Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Errors\\nerror FundMe__NotOwner();\\nerror FundMe_NotEnoghETH();\\n\\n// Interfaces, Libraries, Contracts\\n/**@title A contract for crowd fundings\\n * @author Ansi Nitro\\n * @notice This contract is demo version of funding contract\\n */\\ncontract FundMe {\\n    // Type declaration\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10e18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Events, Modifiers\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions Order:\\n    //// constructor\\n    //// recieve\\n    //// fallback\\n    //// external\\n    //// public\\n    //// internal\\n    //// private\\n    //// view / pure\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**@notice This function funds this contract\\n     */\\n    function fund() public payable {\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe_NotEnoghETH();\\n        }\\n\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (uint256 funderIndex; funderIndex < funders.length; funderIndex++) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunders(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xa7c578de819c0fe2343d0b5630ebb852c42b729a6432138b26c6e812bad1d7ea\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xad9f3281fa3a1ce377d131de272929154ad51e240ef9770f66308c6904e37249\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126738038062001267833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110e16200018660003960008181610374015281816105c301528181610613015261080901526110e16000f3fe60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a85565b6102e2565b6040516100cc9190610acb565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b12565b61032a565b6040516101099190610b4e565b60405180910390f35b61011a610372565b005b34801561012857600080fd5b506101316105b2565b60405161013e9190610acb565b60405180910390f35b34801561015357600080fd5b5061015c6105bf565b6040516101699190610b4e565b60405180910390f35b34801561017e57600080fd5b506101876105e7565b6040516101949190610bc8565b60405180910390f35b6101a56101b1565b005b6101af610611565b005b681b1ae4d6e2ef5000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089f90919063ffffffff16565b1015610228576040517f402bb24300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102769190610c12565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106103405761033f610c68565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a25760006001828154811061041d5761041c610c68565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049a90610c97565b9150506103fa565b50600067ffffffffffffffff8111156104be576104bd610ce0565b5b6040519080825280602002602001820160405280156104ec5781602001602082028036833780820191505090505b506001908051906020019061050292919061097b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052990610d40565b60006040518083038185875af1925050503d8060008114610566576040519150601f19603f3d011682016040523d82523d6000602084013e61056b565b606091505b50509050806105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690610db2565b60405180910390fd5b50565b681b1ae4d6e2ef50000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610696576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d0575b5050505050905060005b81518110156107a457600082828151811061074257610741610c68565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079c90610c97565b915050610724565b50600067ffffffffffffffff8111156107c0576107bf610ce0565b5b6040519080825280602002602001820160405280156107ee5781602001602082028036833780820191505090505b506001908051906020019061080492919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161084b90610d40565b60006040518083038185875af1925050503d8060008114610888576040519150601f19603f3d011682016040523d82523d6000602084013e61088d565b606091505b505090508061089b57600080fd5b5050565b6000806108ab836108db565b90506000670de0b6b3a764000085836108c49190610dd2565b6108ce9190610e5b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092457600080fd5b505afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f19565b5050509150506402540be400816109739190610f94565b915050919050565b8280548282559060005260206000209081019282156109f4579160200282015b828111156109f35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099b565b5b509050610a019190610a05565b5090565b5b80821115610a1e576000816000905550600101610a06565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5282610a27565b9050919050565b610a6281610a47565b8114610a6d57600080fd5b50565b600081359050610a7f81610a59565b92915050565b600060208284031215610a9b57610a9a610a22565b5b6000610aa984828501610a70565b91505092915050565b6000819050919050565b610ac581610ab2565b82525050565b6000602082019050610ae06000830184610abc565b92915050565b610aef81610ab2565b8114610afa57600080fd5b50565b600081359050610b0c81610ae6565b92915050565b600060208284031215610b2857610b27610a22565b5b6000610b3684828501610afd565b91505092915050565b610b4881610a47565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b6000819050919050565b6000610b8e610b89610b8484610a27565b610b69565b610a27565b9050919050565b6000610ba082610b73565b9050919050565b6000610bb282610b95565b9050919050565b610bc281610ba7565b82525050565b6000602082019050610bdd6000830184610bb9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c1d82610ab2565b9150610c2883610ab2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c5d57610c5c610be3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ca282610ab2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cd557610cd4610be3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d2a600083610d0f565b9150610d3582610d1a565b600082019050919050565b6000610d4b82610d1d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d9c600b83610d55565b9150610da782610d66565b602082019050919050565b60006020820190508181036000830152610dcb81610d8f565b9050919050565b6000610ddd82610ab2565b9150610de883610ab2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2157610e20610be3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6682610ab2565b9150610e7183610ab2565b925082610e8157610e80610e2c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eab81610e8c565b8114610eb657600080fd5b50565b600081519050610ec881610ea2565b92915050565b6000819050919050565b610ee181610ece565b8114610eec57600080fd5b50565b600081519050610efe81610ed8565b92915050565b600081519050610f1381610ae6565b92915050565b600080600080600060a08688031215610f3557610f34610a22565b5b6000610f4388828901610eb9565b9550506020610f5488828901610eef565b9450506040610f6588828901610f04565b9350506060610f7688828901610f04565b9250506080610f8788828901610eb9565b9150509295509295909350565b6000610f9f82610ece565b9150610faa83610ece565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fe957610fe8610be3565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102657611025610be3565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106357611062610be3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a05761109f610be3565b5b82820290509291505056fea26469706673582212202fceb66cfd69acac1e7bd1532f764a2c7f4bee737de3689a276205647540f2ce64736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c8063893d20e81161004e578063893d20e8146101475780639e87a5cd14610172578063b60d42881461019d578063be2693f0146101a75761008e565b80630343fb25146100985780633a7b6c74146100d55780633ccfd60b146101125780636b69a5921461011c5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a85565b6102e2565b6040516100cc9190610acb565b60405180910390f35b3480156100e157600080fd5b506100fc60048036038101906100f79190610b12565b61032a565b6040516101099190610b4e565b60405180910390f35b61011a610372565b005b34801561012857600080fd5b506101316105b2565b60405161013e9190610acb565b60405180910390f35b34801561015357600080fd5b5061015c6105bf565b6040516101699190610b4e565b60405180910390f35b34801561017e57600080fd5b506101876105e7565b6040516101949190610bc8565b60405180910390f35b6101a56101b1565b005b6101af610611565b005b681b1ae4d6e2ef5000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089f90919063ffffffff16565b1015610228576040517f402bb24300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102769190610c12565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600182815481106103405761033f610c68565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f7576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a25760006001828154811061041d5761041c610c68565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049a90610c97565b9150506103fa565b50600067ffffffffffffffff8111156104be576104bd610ce0565b5b6040519080825280602002602001820160405280156104ec5781602001602082028036833780820191505090505b506001908051906020019061050292919061097b565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161052990610d40565b60006040518083038185875af1925050503d8060008114610566576040519150601f19603f3d011682016040523d82523d6000602084013e61056b565b606091505b50509050806105af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a690610db2565b60405180910390fd5b50565b681b1ae4d6e2ef50000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610696576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561071a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106d0575b5050505050905060005b81518110156107a457600082828151811061074257610741610c68565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061079c90610c97565b915050610724565b50600067ffffffffffffffff8111156107c0576107bf610ce0565b5b6040519080825280602002602001820160405280156107ee5781602001602082028036833780820191505090505b506001908051906020019061080492919061097b565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161084b90610d40565b60006040518083038185875af1925050503d8060008114610888576040519150601f19603f3d011682016040523d82523d6000602084013e61088d565b606091505b505090508061089b57600080fd5b5050565b6000806108ab836108db565b90506000670de0b6b3a764000085836108c49190610dd2565b6108ce9190610e5b565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561092457600080fd5b505afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f19565b5050509150506402540be400816109739190610f94565b915050919050565b8280548282559060005260206000209081019282156109f4579160200282015b828111156109f35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061099b565b5b509050610a019190610a05565b5090565b5b80821115610a1e576000816000905550600101610a06565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5282610a27565b9050919050565b610a6281610a47565b8114610a6d57600080fd5b50565b600081359050610a7f81610a59565b92915050565b600060208284031215610a9b57610a9a610a22565b5b6000610aa984828501610a70565b91505092915050565b6000819050919050565b610ac581610ab2565b82525050565b6000602082019050610ae06000830184610abc565b92915050565b610aef81610ab2565b8114610afa57600080fd5b50565b600081359050610b0c81610ae6565b92915050565b600060208284031215610b2857610b27610a22565b5b6000610b3684828501610afd565b91505092915050565b610b4881610a47565b82525050565b6000602082019050610b636000830184610b3f565b92915050565b6000819050919050565b6000610b8e610b89610b8484610a27565b610b69565b610a27565b9050919050565b6000610ba082610b73565b9050919050565b6000610bb282610b95565b9050919050565b610bc281610ba7565b82525050565b6000602082019050610bdd6000830184610bb9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c1d82610ab2565b9150610c2883610ab2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610c5d57610c5c610be3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ca282610ab2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cd557610cd4610be3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d2a600083610d0f565b9150610d3582610d1a565b600082019050919050565b6000610d4b82610d1d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d9c600b83610d55565b9150610da782610d66565b602082019050919050565b60006020820190508181036000830152610dcb81610d8f565b9050919050565b6000610ddd82610ab2565b9150610de883610ab2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2157610e20610be3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6682610ab2565b9150610e7183610ab2565b925082610e8157610e80610e2c565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eab81610e8c565b8114610eb657600080fd5b50565b600081519050610ec881610ea2565b92915050565b6000819050919050565b610ee181610ece565b8114610eec57600080fd5b50565b600081519050610efe81610ed8565b92915050565b600081519050610f1381610ae6565b92915050565b600080600080600060a08688031215610f3557610f34610a22565b5b6000610f4388828901610eb9565b9550506020610f5488828901610eef565b9450506040610f6588828901610f04565b9350506060610f7688828901610f04565b9250506080610f8788828901610eb9565b9150509295509295909350565b6000610f9f82610ece565b9150610faa83610ece565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610fe957610fe8610be3565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102657611025610be3565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106357611062610be3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a05761109f610be3565b5b82820290509291505056fea26469706673582212202fceb66cfd69acac1e7bd1532f764a2c7f4bee737de3689a276205647540f2ce64736f6c63430008080033",
    "devdoc": {
        "author": "Ansi Nitro",
        "kind": "dev",
        "methods": {},
        "title": "A contract for crowd fundings",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is demo version of funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 61,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
